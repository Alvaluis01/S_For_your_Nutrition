{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\S_F_Y_N\\\\frontend\\\\src\\\\pages\\\\Inventario.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../style/inventario.css';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Inventario = () => {\n  _s();\n  const [items, setItems] = useState([]);\n  const [nuevo, setNuevo] = useState({\n    Nombre: '',\n    Precio: '',\n    Disponibilidad: '1',\n    // Cambiado a string para coincidir con el valor del select\n    Descripcion: '',\n    Tamaño: '',\n    Calorias: '',\n    Cantidad: '1' // Cambiado a string para manejo inicial\n  });\n  const [editando, setEditando] = useState(null);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    cargarProductos();\n  }, []);\n  const cargarProductos = async () => {\n    try {\n      const res = await fetch('http://localhost:8000/productos');\n      if (!res.ok) throw new Error('Error al cargar productos');\n      const data = await res.json();\n      setItems(data);\n    } catch (err) {\n      console.error('Error al cargar productos', err);\n      setError('No se pudieron cargar los productos');\n    }\n  };\n  const manejarCambio = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNuevo(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    setError('');\n  };\n  const validarFormulario = () => {\n    if (!nuevo.Nombre.trim()) {\n      setError('El nombre del producto es requerido');\n      return false;\n    }\n    if (!nuevo.Precio || isNaN(nuevo.Precio) || parseFloat(nuevo.Precio) <= 0) {\n      setError('El precio debe ser un número mayor a 0');\n      return false;\n    }\n    if (!nuevo.Cantidad || isNaN(nuevo.Cantidad) || parseInt(nuevo.Cantidad) <= 0) {\n      setError('La cantidad debe ser un número mayor a 0');\n      return false;\n    }\n    if (!nuevo.Tamaño) {\n      setError('Seleccione un tamaño');\n      return false;\n    }\n    return true;\n  };\n  const agregar = async () => {\n    if (!validarFormulario()) return;\n    try {\n      const productoExistente = items.find(item => item.Nombre.toLowerCase() === nuevo.Nombre.toLowerCase() && item.Tamaño === nuevo.Tamaño);\n      const datosParaEnviar = {\n        ...nuevo,\n        Precio: parseFloat(nuevo.Precio),\n        Cantidad: parseInt(nuevo.Cantidad),\n        Disponibilidad: parseInt(nuevo.Disponibilidad),\n        Calorias: nuevo.Calorias ? parseInt(nuevo.Calorias) : null\n      };\n      if (productoExistente) {\n        const response = await fetch(`http://localhost:8000/productos/${productoExistente.id}`, {\n          method: 'PATCH',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            Cantidad: parseInt(productoExistente.Cantidad) + parseInt(nuevo.Cantidad),\n            Disponibilidad: parseInt(nuevo.Disponibilidad)\n          })\n        });\n        if (!response.ok) throw new Error('Error al actualizar cantidad');\n        const data = await response.json();\n        setItems(items.map(item => item.id === productoExistente.id ? data : item));\n        alert(`Se agregaron ${nuevo.Cantidad} unidades a ${nuevo.Nombre}`);\n      } else {\n        const response = await fetch('http://localhost:8000/productos', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(datosParaEnviar)\n        });\n        if (!response.ok) throw new Error('Error al crear producto');\n        const data = await response.json();\n        setItems([...items, data]);\n        alert('Producto creado exitosamente');\n      }\n      setNuevo({\n        Nombre: '',\n        Precio: '',\n        Disponibilidad: '1',\n        Descripcion: '',\n        Tamaño: '',\n        Calorias: '',\n        Cantidad: '1'\n      });\n    } catch (error) {\n      console.error('Error:', error);\n      setError(error.message || 'Error al procesar la solicitud');\n    }\n  };\n  const iniciarEdicion = item => {\n    setEditando(item);\n    setNuevo({\n      Nombre: item.Nombre,\n      Precio: item.Precio.toString(),\n      Disponibilidad: item.Disponibilidad.toString(),\n      Descripcion: item.Descripcion,\n      Tamaño: item.Tamaño,\n      Calorias: item.Calorias ? item.Calorias.toString() : '',\n      Cantidad: item.Cantidad.toString()\n    });\n  };\n  const cancelarEdicion = () => {\n    setEditando(null);\n    setNuevo({\n      Nombre: '',\n      Precio: '',\n      Disponibilidad: '1',\n      Descripcion: '',\n      Tamaño: '',\n      Calorias: '',\n      Cantidad: '1'\n    });\n  };\n  const actualizarProducto = async () => {\n    if (!validarFormulario()) return;\n    try {\n      const datosActualizados = {\n        ...nuevo,\n        Precio: parseFloat(nuevo.Precio),\n        Cantidad: parseInt(nuevo.Cantidad),\n        Disponibilidad: parseInt(nuevo.Disponibilidad),\n        Calorias: nuevo.Calorias ? parseInt(nuevo.Calorias) : null\n      };\n      const response = await fetch(`http://localhost:8000/productos/${editando.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(datosActualizados)\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Error al actualizar producto');\n      }\n      const data = await response.json();\n      setItems(items.map(item => item.id === editando.id ? data : item));\n      setEditando(null);\n      setNuevo({\n        Nombre: '',\n        Precio: '',\n        Disponibilidad: '1',\n        Descripcion: '',\n        Tamaño: '',\n        Calorias: '',\n        Cantidad: '1'\n      });\n      alert('Producto actualizado exitosamente');\n    } catch (error) {\n      console.error('Error:', error);\n      setError(error.message || 'Error al actualizar el producto');\n    }\n  };\n  const eliminarProducto = async id => {\n    if (!window.confirm('¿Estás seguro de eliminar este producto?')) return;\n    try {\n      const response = await fetch(`http://localhost:8000/productos/${id}`, {\n        method: 'DELETE'\n      });\n      if (!response.ok) throw new Error('Error al eliminar producto');\n      setItems(items.filter(item => item.id !== id));\n      if (editando && editando.id === id) {\n        cancelarEdicion();\n      }\n      alert('Producto eliminado exitosamente');\n    } catch (error) {\n      console.error('Error:', error);\n      setError(error.message || 'Error al eliminar el producto');\n    }\n  };\n\n  // El resto del código (return) permanece igual...\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 226,\n    columnNumber: 5\n  }, this);\n};\n_s(Inventario, \"QdxZCrECkvXwZkzj09Q6CAiZxbk=\");\n_c = Inventario;\nexport default Inventario;\nvar _c;\n$RefreshReg$(_c, \"Inventario\");","map":{"version":3,"names":["React","useState","useEffect","Link","jsxDEV","_jsxDEV","Inventario","_s","items","setItems","nuevo","setNuevo","Nombre","Precio","Disponibilidad","Descripcion","Tamaño","Calorias","Cantidad","editando","setEditando","error","setError","cargarProductos","res","fetch","ok","Error","data","json","err","console","manejarCambio","e","name","value","target","prev","validarFormulario","trim","isNaN","parseFloat","parseInt","agregar","productoExistente","find","item","toLowerCase","datosParaEnviar","response","id","method","headers","body","JSON","stringify","map","alert","message","iniciarEdicion","toString","cancelarEdicion","actualizarProducto","datosActualizados","errorData","eliminarProducto","window","confirm","filter","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/S_F_Y_N/frontend/src/pages/Inventario.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../style/inventario.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Inventario = () => {\r\n  const [items, setItems] = useState([]);\r\n  const [nuevo, setNuevo] = useState({\r\n    Nombre: '',\r\n    Precio: '',\r\n    Disponibilidad: '1', // Cambiado a string para coincidir con el valor del select\r\n    Descripcion: '',\r\n    Tamaño: '',\r\n    Calorias: '',\r\n    Cantidad: '1' // Cambiado a string para manejo inicial\r\n  });\r\n  const [editando, setEditando] = useState(null);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    cargarProductos();\r\n  }, []);\r\n\r\n  const cargarProductos = async () => {\r\n    try {\r\n      const res = await fetch('http://localhost:8000/productos');\r\n      if (!res.ok) throw new Error('Error al cargar productos');\r\n      const data = await res.json();\r\n      setItems(data);\r\n    } catch (err) {\r\n      console.error('Error al cargar productos', err);\r\n      setError('No se pudieron cargar los productos');\r\n    }\r\n  };\r\n\r\n  const manejarCambio = (e) => {\r\n    const { name, value } = e.target;\r\n    setNuevo(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n    setError('');\r\n  };\r\n\r\n  const validarFormulario = () => {\r\n    if (!nuevo.Nombre.trim()) {\r\n      setError('El nombre del producto es requerido');\r\n      return false;\r\n    }\r\n    if (!nuevo.Precio || isNaN(nuevo.Precio) || parseFloat(nuevo.Precio) <= 0) {\r\n      setError('El precio debe ser un número mayor a 0');\r\n      return false;\r\n    }\r\n    if (!nuevo.Cantidad || isNaN(nuevo.Cantidad) || parseInt(nuevo.Cantidad) <= 0) {\r\n      setError('La cantidad debe ser un número mayor a 0');\r\n      return false;\r\n    }\r\n    if (!nuevo.Tamaño) {\r\n      setError('Seleccione un tamaño');\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const agregar = async () => {\r\n    if (!validarFormulario()) return;\r\n\r\n    try {\r\n      const productoExistente = items.find(item => \r\n        item.Nombre.toLowerCase() === nuevo.Nombre.toLowerCase() &&\r\n        item.Tamaño === nuevo.Tamaño\r\n      );\r\n\r\n      const datosParaEnviar = {\r\n        ...nuevo,\r\n        Precio: parseFloat(nuevo.Precio),\r\n        Cantidad: parseInt(nuevo.Cantidad),\r\n        Disponibilidad: parseInt(nuevo.Disponibilidad),\r\n        Calorias: nuevo.Calorias ? parseInt(nuevo.Calorias) : null\r\n      };\r\n\r\n      if (productoExistente) {\r\n        const response = await fetch(`http://localhost:8000/productos/${productoExistente.id}`, {\r\n          method: 'PATCH',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({ \r\n            Cantidad: parseInt(productoExistente.Cantidad) + parseInt(nuevo.Cantidad),\r\n            Disponibilidad: parseInt(nuevo.Disponibilidad)\r\n          }),\r\n        });\r\n\r\n        if (!response.ok) throw new Error('Error al actualizar cantidad');\r\n\r\n        const data = await response.json();\r\n        setItems(items.map(item => \r\n          item.id === productoExistente.id ? data : item\r\n        ));\r\n        alert(`Se agregaron ${nuevo.Cantidad} unidades a ${nuevo.Nombre}`);\r\n      } else {\r\n        const response = await fetch('http://localhost:8000/productos', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(datosParaEnviar),\r\n        });\r\n\r\n        if (!response.ok) throw new Error('Error al crear producto');\r\n\r\n        const data = await response.json();\r\n        setItems([...items, data]);\r\n        alert('Producto creado exitosamente');\r\n      }\r\n\r\n      setNuevo({\r\n        Nombre: '',\r\n        Precio: '',\r\n        Disponibilidad: '1',\r\n        Descripcion: '',\r\n        Tamaño: '',\r\n        Calorias: '',\r\n        Cantidad: '1'\r\n      });\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      setError(error.message || 'Error al procesar la solicitud');\r\n    }\r\n  };\r\n\r\n  const iniciarEdicion = (item) => {\r\n    setEditando(item);\r\n    setNuevo({\r\n      Nombre: item.Nombre,\r\n      Precio: item.Precio.toString(),\r\n      Disponibilidad: item.Disponibilidad.toString(),\r\n      Descripcion: item.Descripcion,\r\n      Tamaño: item.Tamaño,\r\n      Calorias: item.Calorias ? item.Calorias.toString() : '',\r\n      Cantidad: item.Cantidad.toString()\r\n    });\r\n  };\r\n\r\n  const cancelarEdicion = () => {\r\n    setEditando(null);\r\n    setNuevo({\r\n      Nombre: '',\r\n      Precio: '',\r\n      Disponibilidad: '1',\r\n      Descripcion: '',\r\n      Tamaño: '',\r\n      Calorias: '',\r\n      Cantidad: '1'\r\n    });\r\n  };\r\n\r\n  const actualizarProducto = async () => {\r\n    if (!validarFormulario()) return;\r\n\r\n    try {\r\n      const datosActualizados = {\r\n        ...nuevo,\r\n        Precio: parseFloat(nuevo.Precio),\r\n        Cantidad: parseInt(nuevo.Cantidad),\r\n        Disponibilidad: parseInt(nuevo.Disponibilidad),\r\n        Calorias: nuevo.Calorias ? parseInt(nuevo.Calorias) : null\r\n      };\r\n\r\n      const response = await fetch(`http://localhost:8000/productos/${editando.id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(datosActualizados),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.message || 'Error al actualizar producto');\r\n      }\r\n\r\n      const data = await response.json();\r\n      setItems(items.map(item => item.id === editando.id ? data : item));\r\n      \r\n      setEditando(null);\r\n      setNuevo({\r\n        Nombre: '',\r\n        Precio: '',\r\n        Disponibilidad: '1',\r\n        Descripcion: '',\r\n        Tamaño: '',\r\n        Calorias: '',\r\n        Cantidad: '1'\r\n      });\r\n      alert('Producto actualizado exitosamente');\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      setError(error.message || 'Error al actualizar el producto');\r\n    }\r\n  };\r\n\r\n  const eliminarProducto = async (id) => {\r\n    if (!window.confirm('¿Estás seguro de eliminar este producto?')) return;\r\n\r\n    try {\r\n      const response = await fetch(`http://localhost:8000/productos/${id}`, {\r\n        method: 'DELETE',\r\n      });\r\n\r\n      if (!response.ok) throw new Error('Error al eliminar producto');\r\n\r\n      setItems(items.filter(item => item.id !== id));\r\n      \r\n      if (editando && editando.id === id) {\r\n        cancelarEdicion();\r\n      }\r\n      alert('Producto eliminado exitosamente');\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      setError(error.message || 'Error al eliminar el producto');\r\n    }\r\n  };\r\n\r\n  // El resto del código (return) permanece igual...\r\n  return (\r\n    <div>\r\n      {/* ... (el mismo JSX que tenías antes) ... */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Inventario;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}