{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\S_F_Y_N\\\\frontend\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../style/register.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ValidarPersona() {\n  _s();\n  const [formData, setFormData] = useState({\n    Nombres: '',\n    // Cambiado de \"Documento\" a \"Nombres\"\n    Contraseña: ''\n  });\n  const navigate = useNavigate();\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Cambio en la lógica: ahora buscamos por \"Nombres\" en lugar de \"Documento\"\n    const response = await fetch(`http://localhost:8000/personas?Nombres=${formData.Nombres}`);\n    const personas = await response.json();\n\n    // Verificar si existe un usuario con esos nombres y contraseña\n    const personaValida = personas.find(persona => persona.Nombres === formData.Nombres && persona.Contraseña === formData.Contraseña);\n    if (personaValida) {\n      // Verificar rol (cliente o administrador)\n      const clienteResponse = await fetch(`http://localhost:8000/personas/${personaValida.Id}`);\n      const cliente = await clienteResponse.json();\n      if (cliente) {\n        navigate('/PaginaCliente');\n      } else {\n        navigate('/PaginaAdmin');\n      }\n    } else {\n      alert('Nombres o contraseña incorrectos');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Iniciar \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\" // Cambiado de \"number\" a \"text\"\n        ,\n        name: \"Usuario\",\n        placeholder: \"Usuario\" // Cambiado de \"Documento\" a \"Usuario\"\n        ,\n        value: formData.Nombres,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"Contrase\\xF1a\",\n        placeholder: \"Contrase\\xF1a\",\n        value: formData.Contraseña,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Ingresar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(ValidarPersona, \"w7wunCpqQtc1DdphpYLHBPPXAt4=\", false, function () {\n  return [useNavigate];\n});\n_c = ValidarPersona;\nexport default ValidarPersona;\nvar _c;\n$RefreshReg$(_c, \"ValidarPersona\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","ValidarPersona","_s","formData","setFormData","Nombres","Contraseña","navigate","handleChange","e","name","value","target","handleSubmit","preventDefault","response","fetch","personas","json","personaValida","find","persona","clienteResponse","Id","cliente","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/S_F_Y_N/frontend/src/pages/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../style/register.css';\r\n\r\nfunction ValidarPersona() {\r\n  const [formData, setFormData] = useState({\r\n    Nombres: '',       // Cambiado de \"Documento\" a \"Nombres\"\r\n    Contraseña: ''\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Cambio en la lógica: ahora buscamos por \"Nombres\" en lugar de \"Documento\"\r\n    const response = await fetch(`http://localhost:8000/personas?Nombres=${formData.Nombres}`);\r\n    const personas = await response.json();\r\n\r\n    // Verificar si existe un usuario con esos nombres y contraseña\r\n    const personaValida = personas.find(\r\n      (persona) => persona.Nombres === formData.Nombres && persona.Contraseña === formData.Contraseña\r\n    );\r\n\r\n    if (personaValida) {\r\n      // Verificar rol (cliente o administrador)\r\n      const clienteResponse = await fetch(`http://localhost:8000/personas/${personaValida.Id}`);\r\n      const cliente = await clienteResponse.json();\r\n\r\n      if (cliente) {\r\n        navigate('/PaginaCliente'); \r\n      } else {\r\n        navigate('/PaginaAdmin'); \r\n      }\r\n    } else {\r\n      alert('Nombres o contraseña incorrectos');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2>Iniciar </h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"           // Cambiado de \"number\" a \"text\"\r\n          name=\"Usuario\"\r\n          placeholder=\"Usuario\" // Cambiado de \"Documento\" a \"Usuario\"\r\n          value={formData.Nombres}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          name=\"Contraseña\"\r\n          placeholder=\"Contraseña\"\r\n          value={formData.Contraseña}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <button type=\"submit\">Ingresar</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ValidarPersona;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}