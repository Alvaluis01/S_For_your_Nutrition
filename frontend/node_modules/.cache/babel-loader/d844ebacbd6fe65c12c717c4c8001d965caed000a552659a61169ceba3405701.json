{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\S_F_Y_N\\\\frontend\\\\src\\\\pages\\\\RegistroCli.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../style/register.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RegistroCli() {\n  _s();\n  const [formData, setFormData] = useState({\n    Documento: '',\n    Nombres: '',\n    Apellidos: '',\n    Telefono: '',\n    Email: '',\n    Direccion: '',\n    Id_ciudad: '',\n    Contraseña: '',\n    Id_tipo_compra: '' // Nuevo campo para cliente\n  });\n  const [tiposCompra, setTiposCompra] = useState([]);\n  const navigate = useNavigate();\n\n  // Obtener los tipos de compra desde el backend\n  useEffect(() => {\n    const fetchTiposCompra = async () => {\n      try {\n        const res = await fetch('http://localhost:8000/tipo-compra');\n        const data = await res.json();\n        setTiposCompra(data);\n      } catch (error) {\n        console.error('Error al cargar tipos de compra', error);\n      }\n    };\n    fetchTiposCompra();\n  }, []);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // 1. Registrar persona\n      const resPersona = await fetch('http://localhost:8000/personas', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      const personaResult = await resPersona.json();\n      if (!resPersona.ok) {\n        alert('Error al registrar persona: ' + (personaResult.error || ''));\n        return;\n      }\n      const idPersona = personaResult.Id || personaResult.Id_persona;\n\n      // 2. Registrar cliente con el ID de la persona\n      const clienteData = {\n        Id_persona: idPersona,\n        Id_tipo_compra: formData.Id_tipo_compra,\n        Puntos_fidelizacion: 0,\n        Descuento_inicial: 0\n      };\n      const resCliente = await fetch('http://localhost:8000/clientes', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(clienteData)\n      });\n      const clienteResult = await resCliente.json();\n      if (!resCliente.ok) {\n        alert('Error al registrar cliente: ' + (clienteResult.error || ''));\n        return;\n      }\n      alert('Cliente registrado correctamente');\n\n      // Limpiar formulario\n      setFormData({\n        Documento: '',\n        Nombres: '',\n        Apellidos: '',\n        Telefono: '',\n        Email: '',\n        Direccion: '',\n        Id_ciudad: '',\n        Contraseña: '',\n        Id_tipo_compra: ''\n      });\n      navigate('/ingresar');\n    } catch (err) {\n      alert('Error al conectar con el servidor');\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Registro de Cliente\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"Documento\",\n        placeholder: \"Documento\",\n        value: formData.Documento,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"Nombres\",\n        placeholder: \"Nombres\",\n        value: formData.Nombres,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"Apellidos\",\n        placeholder: \"Apellidos\",\n        value: formData.Apellidos,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"Telefono\",\n        placeholder: \"Tel\\xE9fono\",\n        value: formData.Telefono,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"Email\",\n        placeholder: \"Email\",\n        value: formData.Email,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"Direccion\",\n        placeholder: \"Direcci\\xF3n\",\n        value: formData.Direccion,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"Id_ciudad\",\n        placeholder: \"ID Ciudad\",\n        value: formData.Id_ciudad,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"Contrase\\xF1a\",\n        placeholder: \"Contrase\\xF1a\",\n        value: formData.Contraseña,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"Id_tipo_compra\",\n        value: formData.Id_tipo_compra,\n        onChange: handleChange,\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Seleccione tipo de compra\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), tiposCompra.map(tipo => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: tipo.Id,\n          children: tipo.Descripcion\n        }, tipo.Id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Registrar Cliente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n_s(RegistroCli, \"4vOVpY325NTJg58p1b2qO9EVQZM=\", false, function () {\n  return [useNavigate];\n});\n_c = RegistroCli;\nexport default RegistroCli;\nvar _c;\n$RefreshReg$(_c, \"RegistroCli\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","RegistroCli","_s","formData","setFormData","Documento","Nombres","Apellidos","Telefono","Email","Direccion","Id_ciudad","Contraseña","Id_tipo_compra","tiposCompra","setTiposCompra","navigate","fetchTiposCompra","res","fetch","data","json","error","console","handleChange","e","name","value","target","handleSubmit","preventDefault","resPersona","method","headers","body","JSON","stringify","personaResult","ok","alert","idPersona","Id","Id_persona","clienteData","Puntos_fidelizacion","Descuento_inicial","resCliente","clienteResult","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","map","tipo","Descripcion","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/S_F_Y_N/frontend/src/pages/RegistroCli.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../style/register.css';\r\n\r\nfunction RegistroCli() {\r\n  const [formData, setFormData] = useState({\r\n    Documento: '',\r\n    Nombres: '',\r\n    Apellidos: '',\r\n    Telefono: '',\r\n    Email: '',\r\n    Direccion: '',\r\n    Id_ciudad: '',\r\n    Contraseña: '',\r\n    Id_tipo_compra: '', // Nuevo campo para cliente\r\n  });\r\n\r\n  const [tiposCompra, setTiposCompra] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  // Obtener los tipos de compra desde el backend\r\n  useEffect(() => {\r\n    const fetchTiposCompra = async () => {\r\n      try {\r\n        const res = await fetch('http://localhost:8000/tipo-compra');\r\n        const data = await res.json();\r\n        setTiposCompra(data);\r\n      } catch (error) {\r\n        console.error('Error al cargar tipos de compra', error);\r\n      }\r\n    };\r\n\r\n    fetchTiposCompra();\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      // 1. Registrar persona\r\n      const resPersona = await fetch('http://localhost:8000/personas', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(formData),\r\n      });\r\n\r\n      const personaResult = await resPersona.json();\r\n\r\n      if (!resPersona.ok) {\r\n        alert('Error al registrar persona: ' + (personaResult.error || ''));\r\n        return;\r\n      }\r\n\r\n      const idPersona = personaResult.Id || personaResult.Id_persona;\r\n\r\n      // 2. Registrar cliente con el ID de la persona\r\n      const clienteData = {\r\n        Id_persona: idPersona,\r\n        Id_tipo_compra: formData.Id_tipo_compra,\r\n        Puntos_fidelizacion: 0,\r\n        Descuento_inicial: 0,\r\n      };\r\n\r\n      const resCliente = await fetch('http://localhost:8000/clientes', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(clienteData),\r\n      });\r\n\r\n      const clienteResult = await resCliente.json();\r\n\r\n      if (!resCliente.ok) {\r\n        alert('Error al registrar cliente: ' + (clienteResult.error || ''));\r\n        return;\r\n      }\r\n\r\n      alert('Cliente registrado correctamente');\r\n\r\n      // Limpiar formulario\r\n      setFormData({\r\n        Documento: '',\r\n        Nombres: '',\r\n        Apellidos: '',\r\n        Telefono: '',\r\n        Email: '',\r\n        Direccion: '',\r\n        Id_ciudad: '',\r\n        Contraseña: '',\r\n        Id_tipo_compra: '',\r\n      });\r\n\r\n      navigate('/ingresar');\r\n    } catch (err) {\r\n      alert('Error al conectar con el servidor');\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-container\">\r\n      <h2>Registro de Cliente</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"number\"\r\n          name=\"Documento\"\r\n          placeholder=\"Documento\"\r\n          value={formData.Documento}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"Nombres\"\r\n          placeholder=\"Nombres\"\r\n          value={formData.Nombres}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"Apellidos\"\r\n          placeholder=\"Apellidos\"\r\n          value={formData.Apellidos}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          name=\"Telefono\"\r\n          placeholder=\"Teléfono\"\r\n          value={formData.Telefono}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <input\r\n          type=\"email\"\r\n          name=\"Email\"\r\n          placeholder=\"Email\"\r\n          value={formData.Email}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"Direccion\"\r\n          placeholder=\"Dirección\"\r\n          value={formData.Direccion}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          name=\"Id_ciudad\"\r\n          placeholder=\"ID Ciudad\"\r\n          value={formData.Id_ciudad}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          name=\"Contraseña\"\r\n          placeholder=\"Contraseña\"\r\n          value={formData.Contraseña}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n\r\n        <select\r\n          name=\"Id_tipo_compra\"\r\n          value={formData.Id_tipo_compra}\r\n          onChange={handleChange}\r\n          required\r\n        >\r\n          <option value=\"\">Seleccione tipo de compra</option>\r\n          {tiposCompra.map((tipo) => (\r\n            <option key={tipo.Id} value={tipo.Id}>\r\n              {tipo.Descripcion}\r\n            </option>\r\n          ))}\r\n        </select>\r\n\r\n        <button type=\"submit\">Registrar Cliente</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegistroCli;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}