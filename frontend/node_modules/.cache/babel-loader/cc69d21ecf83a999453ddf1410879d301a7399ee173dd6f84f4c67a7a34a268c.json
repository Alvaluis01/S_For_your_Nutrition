{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\S_F_Y_N\\\\frontend\\\\src\\\\components\\\\Cliente.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimpo;\nfunction LoginCliente() {\n  _s();\n  const navigate = useNavigate();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  function handleLogin(e) {\n    e.preventDefault();\n    // Aquí tu lógica para validar el login (si es correcta)\n    setIsLoggedIn(true); // Supongamos que la validación fue correcta\n\n    // Si el login es exitoso:\n    if (isLoggedIn) {\n      navigate('/logincliente'); // Redirige al panel de cliente\n    } else {\n      navigate('/logincliente');\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login Cliente\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      className: \"auth-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Usuario\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Contrase\\xF1a\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn-primary\",\n        children: \"Ingresar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginCliente, \"GVHzGJnl+vLMWdf9aHFkM2Kljwg=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginCliente;\nexport default LoginCliente;\nvar _c;\n$RefreshReg$(_c, \"LoginCliente\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","impo","LoginCliente","_s","navigate","isLoggedIn","setIsLoggedIn","handleLogin","e","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","required","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/S_F_Y_N/frontend/src/components/Cliente.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimpo\r\n\r\nfunction LoginCliente() {\r\n  const navigate = useNavigate();\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  function handleLogin(e) {\r\n    e.preventDefault();\r\n    // Aquí tu lógica para validar el login (si es correcta)\r\n    setIsLoggedIn(true);  // Supongamos que la validación fue correcta\r\n\r\n    // Si el login es exitoso:\r\n    if (isLoggedIn) {\r\n      navigate('/logincliente');  // Redirige al panel de cliente\r\n    }else{\r\n        navigate('/logincliente'); \r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"auth-container\">\r\n      <h1>Login Cliente</h1>\r\n      <form onSubmit={handleLogin} className=\"auth-form\">\r\n        <input type=\"text\" placeholder=\"Usuario\" required />\r\n        <input type=\"password\" placeholder=\"Contraseña\" required />\r\n        <button type=\"submit\" className=\"btn-primary\">Ingresar</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginCliente;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC/CC,IAAI;AAEJ,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEnD,SAASU,WAAWA,CAACC,CAAC,EAAE;IACtBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB;IACAH,aAAa,CAAC,IAAI,CAAC,CAAC,CAAE;;IAEtB;IACA,IAAID,UAAU,EAAE;MACdD,QAAQ,CAAC,eAAe,CAAC,CAAC,CAAE;IAC9B,CAAC,MAAI;MACDA,QAAQ,CAAC,eAAe,CAAC;IAC7B;EACF;EAEA,oBACEJ,OAAA;IAAKU,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BX,OAAA;MAAAW,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBf,OAAA;MAAMgB,QAAQ,EAAET,WAAY;MAACG,SAAS,EAAC,WAAW;MAAAC,QAAA,gBAChDX,OAAA;QAAOiB,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC,SAAS;QAACC,QAAQ;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACpDf,OAAA;QAAOiB,IAAI,EAAC,UAAU;QAACC,WAAW,EAAC,eAAY;QAACC,QAAQ;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC3Df,OAAA;QAAQiB,IAAI,EAAC,QAAQ;QAACP,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACZ,EAAA,CA3BQD,YAAY;EAAA,QACFJ,WAAW;AAAA;AAAAsB,EAAA,GADrBlB,YAAY;AA6BrB,eAAeA,YAAY;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}