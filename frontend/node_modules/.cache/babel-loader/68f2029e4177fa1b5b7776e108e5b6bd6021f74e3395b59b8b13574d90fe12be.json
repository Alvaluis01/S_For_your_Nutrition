{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\S_F_Y_N\\\\frontend\\\\src\\\\pages\\\\IngresarAdmin.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../style/register.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ValidarPersona() {\n  _s();\n  // ✅ Hooks siempre deben ir al inicio\n  const [formData, setFormData] = useState({\n    Documento: '',\n    Contraseña: ''\n  });\n  const navigate = useNavigate();\n\n  // ✅ Manejador de cambio en inputs\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n\n  // ✅ Manejador de envío del formulario\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:8000/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      const result = await response.json();\n      if (!response.ok) {\n        alert(result.error || 'Error de validación');\n        return;\n      }\n\n      // ✅ Guardar documento y redirigir\n      localStorage.setItem('clienteDocumento', formData.Documento);\n      alert('Inicio de sesión exitoso');\n      navigate('/Paginadmin');\n    } catch (error) {\n      alert('Error al conectar con el servidor');\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Ingresar como Admin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"Documento\",\n        placeholder: \"Documento\",\n        value: formData.Documento,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"Contrase\\xF1a\",\n        placeholder: \"Contrase\\xF1a\",\n        value: formData.Contraseña,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Ingresar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(ValidarPersona, \"4g5+/maqMA/hvvj+/w3VW0uGTy8=\", false, function () {\n  return [useNavigate];\n});\n_c = ValidarPersona;\nexport default ValidarPersona;\nvar _c;\n$RefreshReg$(_c, \"ValidarPersona\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","ValidarPersona","_s","formData","setFormData","Documento","Contraseña","navigate","handleChange","e","name","value","target","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","result","json","ok","alert","error","localStorage","setItem","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/S_F_Y_N/frontend/src/pages/IngresarAdmin.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../style/register.css';\r\n\r\nfunction ValidarPersona() {\r\n  // ✅ Hooks siempre deben ir al inicio\r\n  const [formData, setFormData] = useState({\r\n    Documento: '',\r\n    Contraseña: ''\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n\r\n  // ✅ Manejador de cambio en inputs\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  // ✅ Manejador de envío del formulario\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:8000/login', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(formData)\r\n      });\r\n\r\n      const result = await response.json();\r\n\r\n      if (!response.ok) {\r\n        alert(result.error || 'Error de validación');\r\n        return;\r\n      }\r\n\r\n      // ✅ Guardar documento y redirigir\r\n      localStorage.setItem('clienteDocumento', formData.Documento);\r\n      alert('Inicio de sesión exitoso');\r\n      navigate('/Paginadmin');\r\n\r\n    } catch (error) {\r\n      alert('Error al conectar con el servidor');\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2>Ingresar como Admin</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"number\"\r\n          name=\"Documento\"\r\n          placeholder=\"Documento\"\r\n          value={formData.Documento}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          name=\"Contraseña\"\r\n          placeholder=\"Contraseña\"\r\n          value={formData.Contraseña}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <button type=\"submit\">Ingresar</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ValidarPersona;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxB;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC;IACvCQ,SAAS,EAAE,EAAE;IACbC,UAAU,EAAE;EACd,CAAC,CAAC;EAEF,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMU,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCR,WAAW,CAAC;MAAE,GAAGD,QAAQ;MAAE,CAACO,IAAI,GAAGC;IAAM,CAAC,CAAC;EAC7C,CAAC;;EAED;EACA,MAAME,YAAY,GAAG,MAAOJ,CAAC,IAAK;IAChCA,CAAC,CAACK,cAAc,CAAC,CAAC;IAElB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;QAC1DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAClB,QAAQ;MAC/B,CAAC,CAAC;MAEF,MAAMmB,MAAM,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAEpC,IAAI,CAACR,QAAQ,CAACS,EAAE,EAAE;QAChBC,KAAK,CAACH,MAAM,CAACI,KAAK,IAAI,qBAAqB,CAAC;QAC5C;MACF;;MAEA;MACAC,YAAY,CAACC,OAAO,CAAC,kBAAkB,EAAEzB,QAAQ,CAACE,SAAS,CAAC;MAC5DoB,KAAK,CAAC,0BAA0B,CAAC;MACjClB,QAAQ,CAAC,aAAa,CAAC;IAEzB,CAAC,CAAC,OAAOmB,KAAK,EAAE;MACdD,KAAK,CAAC,mCAAmC,CAAC;MAC1CI,OAAO,CAACH,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAED,oBACE1B,OAAA;IAAK8B,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9B/B,OAAA;MAAA+B,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BnC,OAAA;MAAMoC,QAAQ,EAAEvB,YAAa;MAAAkB,QAAA,gBAC3B/B,OAAA;QACEqC,IAAI,EAAC,QAAQ;QACb3B,IAAI,EAAC,WAAW;QAChB4B,WAAW,EAAC,WAAW;QACvB3B,KAAK,EAAER,QAAQ,CAACE,SAAU;QAC1BkC,QAAQ,EAAE/B,YAAa;QACvBgC,QAAQ;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACFnC,OAAA;QACEqC,IAAI,EAAC,UAAU;QACf3B,IAAI,EAAC,eAAY;QACjB4B,WAAW,EAAC,eAAY;QACxB3B,KAAK,EAAER,QAAQ,CAACG,UAAW;QAC3BiC,QAAQ,EAAE/B,YAAa;QACvBgC,QAAQ;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACFnC,OAAA;QAAQqC,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACjC,EAAA,CApEQD,cAAc;EAAA,QAOJH,WAAW;AAAA;AAAA2C,EAAA,GAPrBxC,cAAc;AAsEvB,eAAeA,cAAc;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}